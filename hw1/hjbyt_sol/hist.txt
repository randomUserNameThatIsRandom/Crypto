cipher_hist ={'a': 61,
 'b': 65,
 'c': 19,
 'd': 22,
 'e': 22,
 'f': 0,
 'g': 73,
 'h': 45,
 'i': 1,
 'j': 17,
 'k': 91,
 'l': 22,
 'm': 98,
 'n': 32,
 'o': 94,
 'p': 22,
 'q': 34,
 'r': 20,
 's': 149,
 't': 0,
 'u': 65,
 'v': 9,
 'w': 0,
 'x': 22,
 'y': 104,
 'z': 47}


cipher_hist_normalized_ordered = 
[('s', 13.139329805996471),
 ('y', 9.171075837742503),
 ('m', 8.641975308641975),
 ('o', 8.289241622574956),
 ('k', 8.024691358024691),
 ('g', 6.437389770723104),
 ('b', 5.731922398589065),
 ('u', 5.731922398589065),
 ('a', 5.379188712522046),
 ('z', 4.144620811287478),
 ('h', 3.968253968253968),
 ('q', 2.9982363315696645),
 ('n', 2.821869488536155),
 ('l', 1.9400352733686066),
 ('e', 1.9400352733686066),
 ('d', 1.9400352733686066),
 ('p', 1.9400352733686066),
 ('x', 1.9400352733686066),
 ('r', 1.763668430335097),
 ('c', 1.6754850088183422),
 ('j', 1.4991181657848323),
 ('v', 0.7936507936507936),
 ('i', 0.08818342151675485),
 ('t', 0.0),
 ('w', 0.0),
 ('f', 0.0)]

english_hist_ordered = 
 [('e', 12.7),
 ('t', 9.056),
 ('a', 8.167),
 ('o', 7.507),
 ('i', 6.966),
 ('n', 6.749),
 ('s', 6.327),
 ('h', 6.094),
 ('r', 5.987),
 ('d', 4.253),
 ('l', 4.025),
 ('c', 2.782),
 ('u', 2.758),
 ('m', 2.406),
 ('w', 2.36),
 ('f', 2.228),
 ('g', 2.015),
 ('y', 1.974),
 ('p', 1.929),
 ('b', 1.492),
 ('v', 0.978),
 ('k', 0.772),
 ('j', 0.153),
 ('x', 0.15),
 ('q', 0.095),
 ('z', 0.074)]

 translation1 = 
 {'a': 'r',
 'b': 's',
 'c': 'b',
 'd': 'f',
 'e': 'w',
 'f': 'z',
 'g': 'n',
 'h': 'l',
 'i': 'j',
 'j': 'v',
 'k': 'i',
 'l': 'm',
 'm': 'a',
 'n': 'u',
 'o': 'o',
 'p': 'g',
 'q': 'c',
 'r': 'p',
 's': 'e',
 't': 'x',
 'u': 'h',
 'v': 'k',
 'w': 'q',
 'x': 'y',
 'y': 't',
 'z': 'd'}

translation2 = {
 'a': 'r',
 'b': 's',
 'c': 'u',
 'd': 'b',
 'e': 'g',
 'f': 'z',
 'g': 'n',
 'h': 'l',
 'i': 'q',
 'j': 'v',
 'k': 'i',
 'l': 'y',
 'm': 'o',
 'n': 'f',
 'o': 'a',
 'p': 'w',
 'q': 'c',
 'r': 'm',
 's': 'e',
 't': 'x',
 'u': 'h',
 'v': 'k',
 'w': 'j',
 'x': 'p',
 'y': 't',
 'z': 'd'}


 def translate(cipher, dict):
    p = ''
    for c in cipher:
        if c not in dict.keys():
            p += c
        else:
            p += dict[c]
    return p